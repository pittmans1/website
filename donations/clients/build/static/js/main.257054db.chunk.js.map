{"version":3,"sources":["components/Donations.js","components/Cart/cartItem.js","components/Cart/Cart.js","components/CheckoutForm/CheckoutForm.js","Products.js","App.js","index.js"],"names":["products","name","desc","price","img","id","CartItem","cost","quantity","className","toFixed","Cart","itemsInCart","totalCost","length","map","product","CheckoutForm","useState","status","setStatus","stripe","useStripe","useElements","console","log","submit","e","a","preventDefault","createToken","personal_id_number","token","fetch","method","body","JSON","stringify","amount","ok","Error","message","onSubmit","type","disabled","Products","onAddToCartClick","onClick","src","alt","App","setItemsInCart","reduce","acc","promise","loadStripe","itemInCart","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.257054db.chunk.js","sourcesContent":["export const products = [\n    {\n        name: \"1 dollar donation\",\n        desc: \"you will be donating to me but it will never be pulled from your account\",\n        price: 1.00,\n        img: \"https://static.wikia.nocookie.net/cool-insaity/images/6/6f/1_Dollar_Bill_-_Pose.png/revision/latest?cb=20171228182721\",\n        id: 111\n    },\n    {\n        name: \"2 dollar donation\",\n        desc: \"you will be donating to me but it will never go pulled from your bank account but will show me the statistics\",\n        price: 2.00,\n        img : \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQ2qOUJ7k4CaqZOzQ4BMF9tQIwDKgxvMcjk0Q&usqp=CAU\",\n        id: 112\n    },\n    {\n        name: \"5 dollar donation\",\n        desc: \"you will be donating to me but it will never go pulled from your bank account but will show me the statistics\",\n        price: 5.00,\n        img: \"https://upload.wikimedia.org/wikipedia/commons/thumb/2/25/US_%245_series_2003A_obverse.jpg/1200px-US_%245_series_2003A_obverse.jpg\",\n        id:115\n        \n    }\n]","import React from \"react\"\nimport \"./CartItem.css\"\n\nexport default function CartItem({name, cost, desc, quantity}){\n    return(\n        <div className=\"CartItem\">\n            <div>{name}</div>\n            <div className=\"CartItem-details\">\n        <div className=\"CartItem-quantity\">Qty: {quantity}</div>\n        <div>{desc}</div>\n        <div>${cost.toFixed(2)}</div>\n      </div>\n        </div>\n    )\n}","import React from 'react'\nimport CartItem from \"./cartItem\"\nimport './Cart.css'\nimport { products } from '../Donations'\n\nexport default function  Cart ({itemsInCart, totalCost}) {\n    return (\n        <div className=\"Cart\">\n            <h2 className=\"Cart-title\">Your Shopping cart</h2>\n            {itemsInCart.length > 0 ? (\n                <div>\n                    {itemsInCart.map(product => (\n                        <CartItem\n                        key={product.id}\n                        name={product.name}\n                        cost={product.price * product.quantity}\n                        quantity={product.quantity}\n                        />\n                    ))}\n                    <div className=\"Cart-Total-cost\">\n                        Total cost : ${totalCost.toFixed(2)}\n                        </div>\n                    </div>\n            ):(\n                <div>Your Cart is empty!</div>\n            )}\n        </div>\n    );\n}\n\n","import React, { useState } from 'react';\nimport { CardElement} from \"@stripe/react-stripe-js\";\nimport {\n    useStripe,\n    useElements\n  } from \"@stripe/react-stripe-js\"\nimport './CheckoutForm.css';\nimport { stringify } from 'uuid';\n\nfunction CheckoutForm({  totalCost }) {\n  const [status, setStatus] = useState('default');\n  const stripe = useStripe();\n  const elements = useElements();\n console.log(stripe)\n  const submit = async e => {\n    e.preventDefault();\n\n    setStatus('submitting');\n\n    try {\n      let  token  = await stripe.createToken(\"pii\",{\n        personal_id_number: \"123131185\"\n      })\n      \n      let response = await fetch('/.netlify/functions/charge', {\n        method: 'POST',\n        body: JSON.stringify({\n          amount: totalCost * 100,\n          token: token\n        }),\n      });\n\n      if (response.ok) {\n        setStatus('complete');\n      } else {\n        throw new Error('Network response was not ok.');\n      }\n    } catch (err) {\n      setStatus('error');\n      console.log(err.message)\n      console.log(stripe)\n      \n    }\n  };\n\n  if (status === 'complete') {\n    return <div className=\"CheckoutForm-complete\">Payment successful!</div>;\n  }\n\n  return (\n    <form className=\"CheckoutForm\" onSubmit={submit}>\n      <h4>Would you like to complete the purchase?</h4>\n      <CardElement id=\"card-element\"/>\n      <button\n        className=\"CheckoutForm-button\"\n        type=\"submit\"\n        disabled={status === 'submitting'}\n      >\n        {status === 'submitting' ? 'Submitting' : 'Submit Order'}\n      </button>\n      {status === 'error' && (\n        <div className=\"CheckoutForm-error\">Something went wrong.</div>\n      )}\n    </form>\n  );\n}\n\nexport default CheckoutForm;","import React from 'react'\n\nimport './Products.scss'\n// Make sure to call `loadStripe` outside of a component’s render to avoid\n// recreating the `Stripe` object on every render.\n\nexport default function Products({onAddToCartClick, price, name, desc, img, id}){\n    \n      return (\n        <div className=\"product\" key={id}>\n          <section>\n            <h2>{name}</h2>\n            <p>{desc}</p>\n            <h3>{'$' + price}</h3>\n            <button onClick={onAddToCartClick}>\n              Add to Cart\n            </button>\n          </section>\n          <img src={img} alt={name} />\n        </div>\n      )\n  }","import React, {useState} from \"react\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { Elements, StripeProvider } from \"@stripe/react-stripe-js\";\nimport {products} from './components/Donations'\nimport Cart from \"./components/Cart/Cart\"\nimport CheckoutForm from \"./components/CheckoutForm/CheckoutForm\"\n\nimport Products from \"./Products\"\nimport { toast } from \"react-toastify\";\n\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport \"./styles.css\";\n\n// Make sure to call loadStripe outside of a component’s render to avoid\n// recreating the Stripe object on every render.\n// loadStripe is initialized with your real test publishable API key.\nexport default function App() {\nconst [itemsInCart, setItemsInCart]= useState([])\nconst handleAddToCartClick = id => {\n  setItemsInCart(itemsInCart => {\n    const itemInCart = itemsInCart.find(product => product.id === id);\n\n    if(itemInCart){\n      return itemsInCart.map(product => {\n        if(product.id !== id) return product;\n        return {...itemInCart, quantity: product.quantity + 1};\n      })\n    }\n\n    const product = products.find(product => product.id === id);\n    return [...itemsInCart, {...product, quantity: 1}];\n  })\n}\n\n  const totalCost = itemsInCart.reduce(\n    (acc, product) => acc + product.price * product.quantity,\n    0\n  )\n  const promise = loadStripe(\"pk_test_51Ii486HxoL2opcCfdWK7D7yYKt1v9GRtGSwPXPn5UoAbV1l26CLzZ0HaN9aZBIx5Vsw8BfGfMQ0sRqCz0ckWdmHO00QmpwselZ\")\n  return (\n   <main>\n     <div>\n        {products.map(product => (\n          <Products \n          key={product.id}\n           name={product.name}\n           desc={product.desc}\n           price={product.price}\n           img={product.img}\n           onAddToCartClick={()=> handleAddToCartClick(product.id)}\n           />\n        ))}\n      </div>\n      <Cart itemsInCart={itemsInCart} totalCost={totalCost}/>\n      {itemsInCart.length > 0 && (\n          <Elements stripe={promise}>\n            <CheckoutForm totalCost={totalCost}/>\n          </Elements>\n      )}\n      </main>\n  );\n}\n\n\n/** \n <Elements stripe={promise}>\n <CheckoutForm />\n </Elements>\n * \n*/","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App.js\"\n\n\n\nReactDOM.render(<App/>, document.getElementById(\"root\"))"],"sourceRoot":""}