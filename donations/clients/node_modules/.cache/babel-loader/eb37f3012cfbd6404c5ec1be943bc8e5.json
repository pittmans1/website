{"ast":null,"code":"var _jsxFileName = \"/Users/scottpittman/Desktop/website/donations/clients/src/components/PaymentForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { CardElement, useElements, useStripe } from \"@stripe/react-stripe-js\";\nimport axios from \"axios\";\nimport { products } from \"./Donations\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function PaymentForm() {\n  _s();\n\n  const [success, setSuccess] = useState(false);\n  const stripe = useStripe();\n  const elemetns = useElements();\n  const cardStyle = {\n    style: {\n      base: {\n        color: \"#32325d\",\n        fontFamily: 'Arial, sans-serif',\n        fontSmoothing: \"antialiased\",\n        fontSize: \"16px\",\n        \"::placeholder\": {\n          color: \"#32325d\"\n        }\n      },\n      invalid: {\n        color: \"#fa755a\",\n        iconColor: \"#fa755a\"\n      }\n    }\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: \"card\",\n      card: elemetns.getElement(CardElement)\n    });\n\n    if (!error) {\n      try {\n        const {\n          id\n        } = paymentMethod;\n        const response = await axios.post(\"http://localhost:7000/payment\", {\n          amount: products.price,\n          id\n        });\n\n        if (response.data.success) {\n          console.log(`Successful payment! `);\n          setSuccess(true);\n        }\n      } catch (error) {\n        console.log('Error', error);\n      }\n    } else {\n      console.log(error.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !success ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(CardElement, {\n        options: cardStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Donate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"You just Donated thank you your Donation will be greatly appreciated.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(PaymentForm, \"9WqHMsRwU5fBtc+4VUBN4IzqQeY=\", false, function () {\n  return [useStripe, useElements];\n});\n\n_c = PaymentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentForm\");","map":{"version":3,"sources":["/Users/scottpittman/Desktop/website/donations/clients/src/components/PaymentForm.js"],"names":["React","useState","CardElement","useElements","useStripe","axios","products","PaymentForm","success","setSuccess","stripe","elemetns","cardStyle","style","base","color","fontFamily","fontSmoothing","fontSize","invalid","iconColor","handleSubmit","e","preventDefault","error","paymentMethod","createPaymentMethod","type","card","getElement","id","response","post","amount","price","data","console","log","message"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,SAAnC,QAAmD,yBAAnD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,aAAzB;;;AAIA,eAAe,SAASC,WAAT,GAAsB;AAAA;;AACjC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAMS,MAAM,GAAGN,SAAS,EAAxB;AACA,QAAMO,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAMS,SAAS,GAAG;AACdC,IAAAA,KAAK,EAAE;AACLC,MAAAA,IAAI,EAAE;AACJC,QAAAA,KAAK,EAAE,SADH;AAEJC,QAAAA,UAAU,EAAE,mBAFR;AAGJC,QAAAA,aAAa,EAAE,aAHX;AAIJC,QAAAA,QAAQ,EAAE,MAJN;AAKJ,yBAAiB;AACfH,UAAAA,KAAK,EAAE;AADQ;AALb,OADD;AAULI,MAAAA,OAAO,EAAE;AACPJ,QAAAA,KAAK,EAAE,SADA;AAEPK,QAAAA,SAAS,EAAE;AAFJ;AAVJ;AADO,GAAlB;;AAkBA,QAAMC,YAAY,GAAG,MAAOC,CAAP,IAAY;AAC7BA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAM;AAACC,MAAAA,KAAD;AAAQC,MAAAA;AAAR,QAAyB,MAAMf,MAAM,CAACgB,mBAAP,CAA2B;AAC5DC,MAAAA,IAAI,EAAG,MADqD;AAE5DC,MAAAA,IAAI,EAAGjB,QAAQ,CAACkB,UAAT,CAAoB3B,WAApB;AAFqD,KAA3B,CAArC;;AAMA,QAAG,CAACsB,KAAJ,EAAU;AACN,UAAG;AACD,cAAM;AAACM,UAAAA;AAAD,YAAML,aAAZ;AACA,cAAMM,QAAQ,GAAG,MAAM1B,KAAK,CAAC2B,IAAN,CAAW,+BAAX,EAA4C;AAChEC,UAAAA,MAAM,EAAE3B,QAAQ,CAAC4B,KAD+C;AAE7DJ,UAAAA;AAF6D,SAA5C,CAAvB;;AAIF,YAAGC,QAAQ,CAACI,IAAT,CAAc3B,OAAjB,EAAyB;AACrB4B,UAAAA,OAAO,CAACC,GAAR,CAAa,sBAAb;AACA5B,UAAAA,UAAU,CAAC,IAAD,CAAV;AACH;AACJ,OAVG,CAUF,OAAMe,KAAN,EAAY;AACVY,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBb,KAArB;AACH;AACJ,KAdG,MAcC;AACGY,MAAAA,OAAO,CAACC,GAAR,CAAYb,KAAK,CAACc,OAAlB;AACH;AACJ,GAzBD;;AA2BA,sBACE;AAAA,cACC,CAAC9B,OAAD,gBACD;AAAM,MAAA,QAAQ,EAAEa,YAAhB;AAAA,8BACU,QAAC,WAAD;AAAa,QAAA,OAAO,EAAET;AAAtB;AAAA;AAAA;AAAA;AAAA,cADV,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADC,gBAMD;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAPA,mBADF;AAcH;;GA/DuBL,W;UAELH,S,EACED,W;;;KAHGI,W","sourcesContent":["import React, {useState} from \"react\"\nimport { CardElement, useElements, useStripe} from \"@stripe/react-stripe-js\"\nimport axios from \"axios\"\nimport { products } from \"./Donations\"\n\n\n\nexport default function PaymentForm(){\n    const [success, setSuccess] = useState(false)\n    const stripe = useStripe()\n    const elemetns = useElements()\n    const cardStyle = {\n        style: {\n          base: {\n            color: \"#32325d\",\n            fontFamily: 'Arial, sans-serif',\n            fontSmoothing: \"antialiased\",\n            fontSize: \"16px\",\n            \"::placeholder\": {\n              color: \"#32325d\"\n            }\n          },\n          invalid: {\n            color: \"#fa755a\",\n            iconColor: \"#fa755a\"\n          }\n        }\n      };\n\n    const handleSubmit = async (e) =>{\n        e.preventDefault()\n        const {error, paymentMethod} = await stripe.createPaymentMethod({\n            type : \"card\",\n            card : elemetns.getElement(CardElement)\n        })\n    \n\n        if(!error){\n            try{\n              const {id} =paymentMethod\n              const response = await axios.post(\"http://localhost:7000/payment\", {\n                 amount: products.price,\n                    id\n             })\n            if(response.data.success){\n                console.log(`Successful payment! `)\n                setSuccess(true)\n            }\n        } catch(error){\n            console.log('Error', error)\n        }\n    }else{\n            console.log(error.message)\n        }\n    }\n\n    return(\n      <>\n      {!success ?\n      <form onSubmit={handleSubmit}>            \n                <CardElement options={cardStyle}/>\n          <button >Donate</button>\n      </form>\n      :\n      <div>\n          <h2>You just Donated thank you your Donation will be greatly appreciated.</h2>\n      </div>\n    }\n      </>\n    )\n}"]},"metadata":{},"sourceType":"module"}