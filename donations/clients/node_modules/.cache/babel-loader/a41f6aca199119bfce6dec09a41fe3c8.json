{"ast":null,"code":"var _jsxFileName = \"/Users/scottpittman/Desktop/website/donations/clients/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Route, Switch, Router } from \"react-router-dom\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { Elements } from \"@stripe/react-stripe-js\";\nimport { createBrowserHistory } from \"history\";\nimport { products } from './components/Donations';\nimport Checkout from \"./Checkout\";\nimport Products from \"./Products\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./styles.css\";\nimport StripeContainer from \"./components/StripeContainer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ntoast.configure();\nconst history = createBrowserHistory(); // Make sure to call loadStripe outside of a component’s render to avoid\n// recreating the Stripe object on every render.\n// loadStripe is initialized with your real test publishable API key.\n\nconst promise = loadStripe(\"pk_test_51Ii486HxoL2opcCfdWK7D7yYKt1v9GRtGSwPXPn5UoAbV1l26CLzZ0HaN9aZBIx5Vsw8BfGfMQ0sRqCz0ckWdmHO00QmpwselZ\");\nexport default function App() {\n  _s();\n\n  const [selectedProduct, setSelectedProduct] = useState(null);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    history: history,\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        render: () => /*#__PURE__*/_jsxDEV(Products, {\n          products: products,\n          selectProduct: setSelectedProduct,\n          history: history\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/checkout\",\n        render: () => /*#__PURE__*/_jsxDEV(StripeContainer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 8\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n/** \n <Elements stripe={promise}>\n <CheckoutForm />\n </Elements>\n * \n*/\n\n_s(App, \"LB7CKN5ei8ToaN6e4gYD7HPDpQA=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/scottpittman/Desktop/website/donations/clients/src/App.js"],"names":["React","useState","Route","Switch","Router","loadStripe","Elements","createBrowserHistory","products","Checkout","Products","toast","StripeContainer","configure","history","promise","App","selectedProduct","setSelectedProduct"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,KAAR,EAAeC,MAAf,EAAuBC,MAAvB,QAAqC,kBAArC;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,QAAT,QAAyB,yBAAzB;AACA,SAAQC,oBAAR,QAAmC,SAAnC;AACA,SAAQC,QAAR,QAAuB,wBAAvB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,OAAO,uCAAP;AAEA,OAAO,cAAP;AACA,OAAOC,eAAP,MAA4B,8BAA5B;;AACAD,KAAK,CAACE,SAAN;AACA,MAAMC,OAAO,GAAGP,oBAAoB,EAApC,C,CAEA;AACA;AACA;;AACA,MAAMQ,OAAO,GAAGV,UAAU,CAAC,6GAAD,CAA1B;AACA,eAAe,SAASW,GAAT,GAAe;AAAA;;AAC5B,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCjB,QAAQ,CAAC,IAAD,CAAtD;AAEA,sBAEE,QAAC,MAAD;AAAQ,IAAA,OAAO,EAAEa,OAAjB;AAAA,2BACG,QAAC,MAAD;AAAA,8BACC,QAAC,KAAD;AACE,QAAA,KAAK,MADP;AAEE,QAAA,IAAI,EAAC,GAFP;AAGE,QAAA,MAAM,EAAE,mBACN,QAAC,QAAD;AACE,UAAA,QAAQ,EAAEN,QADZ;AAEE,UAAA,aAAa,EAAEU,kBAFjB;AAGE,UAAA,OAAO,EAAEJ;AAHX;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,cADD,eAaH,QAAC,KAAD;AACM,QAAA,IAAI,EAAC,WADX;AAEM,QAAA,MAAM,EAAE,mBACN,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAHR;AAAA;AAAA;AAAA;AAAA,cAbG;AAAA;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,UAFF;AA0BD;AAGD;AACA;AACA;AACA;AACA;AACA;;GArCwBE,G;;KAAAA,G","sourcesContent":["import React, {useState} from \"react\";\nimport {Route, Switch, Router } from \"react-router-dom\"\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { Elements } from \"@stripe/react-stripe-js\";\nimport {createBrowserHistory} from \"history\"\nimport {products} from './components/Donations'\nimport Checkout from \"./Checkout\"\nimport Products from \"./Products\"\nimport { toast } from \"react-toastify\";\n\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport \"./styles.css\";\nimport StripeContainer from \"./components/StripeContainer\";\ntoast.configure()\nconst history = createBrowserHistory()\n\n// Make sure to call loadStripe outside of a component’s render to avoid\n// recreating the Stripe object on every render.\n// loadStripe is initialized with your real test publishable API key.\nconst promise = loadStripe(\"pk_test_51Ii486HxoL2opcCfdWK7D7yYKt1v9GRtGSwPXPn5UoAbV1l26CLzZ0HaN9aZBIx5Vsw8BfGfMQ0sRqCz0ckWdmHO00QmpwselZ\");\nexport default function App() {\n  const [selectedProduct, setSelectedProduct] = useState(null)\n\n  return (\n\n    <Router history={history}>\n       <Switch>\n        <Route\n          exact\n          path=\"/\"\n          render={() => (\n            <Products\n              products={products}\n              selectProduct={setSelectedProduct}\n              history={history}\n            />\n          )}\n        />\n    \n    <Route\n          path=\"/checkout\"\n          render={() => (\n            <StripeContainer />\n          )}\n        />\n      </Switch>    \n    </Router>\n\n  );\n}\n\n\n/** \n <Elements stripe={promise}>\n <CheckoutForm />\n </Elements>\n * \n*/"]},"metadata":{},"sourceType":"module"}